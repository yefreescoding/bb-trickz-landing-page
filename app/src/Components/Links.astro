---
interface Props {
  text: string;
  href: string;
  style: 'header__links';
  icon?: {
    name: string;
    side: 'left' | 'right';
  };
  classes?: string;
  hide?: string;
}

const { text, href, style, icon, classes, hide, ...rest } =
  Astro.props as Props;
---

<a href={href} class:list={['header__links', classes]} {...rest}>
  {
    icon && icon.side === 'left' && (
      <img
        class="aspect-square object-contain w-[20px]"
        src={icon.name}
        alt="icon"
      />
    )
  }
  <span id="text-link" class:list={['mobile', hide]}>{text}</span>
  {
    icon && icon.side === 'right' && (
      <img
        class="aspect-square object-contain w-[20px]"
        src={icon.name}
        alt="icon"
      />
    )
  }
</a>

<style lang="scss">
  .header__links {
    width: fit-content;
    border-radius: 0.5rem;
    font-size: clamp(0.8rem, calc(0.7rem + 1vw), 1.3rem);
    &:hover {
      background-color: hsla(0, 0%, 70%, 0.793);
      transform: scale(1.1, 1.1);
    }
  }
  .header__links[aria-current='page'] {
    background-color: var(--Very-dark-desaturated-blue);
  }
  @media (width < 40em) {
    .mobile.hide {
      display: none;
    }
  }
</style>

<!-- <script>
  const links = document.querySelectorAll('.header__links');

  links.forEach((link) => {
    if (link.getAttribute('href') === window.location.pathname) {
      link.setAttribute('aria-current', 'page');
    }
  });
  // Check if the link href matches the current URL
</script> -->
